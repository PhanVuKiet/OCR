import streamlit as st
from PIL import Image
import pytesseract
from pdf2image import convert_from_bytes
import io

# ========================================================================================
# C·∫§U H√åNH TRANG
# ========================================================================================
st.set_page_config(
    page_title="Tr·ª£ l√Ω OCR Th√¥ng minh",
    page_icon="üìÑ",
    layout="wide"
)

# ========================================================================================
# H√ÄM H·ªñ TR·ª¢ (LOGIC X·ª¨ L√ù)
# ========================================================================================

@st.cache_data  # S·ª≠ d·ª•ng cache ƒë·ªÉ kh√¥ng x·ª≠ l√Ω l·∫°i file ƒë√£ x·ª≠ l√Ω
def process_file(file_bytes, file_extension):
    """
    H√†m trung t√¢m x·ª≠ l√Ω file ƒë·∫ßu v√†o (·∫£nh ho·∫∑c PDF) v√† tr·∫£ v·ªÅ vƒÉn b·∫£n ƒë∆∞·ª£c tr√≠ch xu·∫•t.
    M·∫∑c ƒë·ªãnh s·ª≠ d·ª•ng ch·∫ø ƒë·ªô song ng·ªØ Vi·ªát + Anh.
    """
    # C·ªë ƒë·ªãnh ng√¥n ng·ªØ x·ª≠ l√Ω l√† Vi·ªát + Anh
    lang_code = "vie+eng"
    
    extracted_text = ""
    try:
        if file_extension == 'pdf':
            images = convert_from_bytes(file_bytes)
            all_text = []
            progress_bar = st.progress(0, text="ƒêang x·ª≠ l√Ω file PDF...")
            for i, img in enumerate(images):
                all_text.append(pytesseract.image_to_string(img, lang=lang_code))
                progress_bar.progress((i + 1) / len(images))
            extracted_text = "\n\n--- H·∫øt trang ---\n\n".join(all_text)
        elif file_extension in ['png', 'jpg', 'jpeg']:
            image = Image.open(io.BytesIO(file_bytes))
            extracted_text = pytesseract.image_to_string(image, lang=lang_code)
        return extracted_text, None
    except Exception as e:
        return None, f"ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh x·ª≠ l√Ω: {e}"

# ========================================================================================
# GIAO DI·ªÜN CH√çNH C·ª¶A ·ª®NG D·ª§NG
# ========================================================================================

st.title("üìÑ Tr·ª£ l√Ω OCR Th√¥ng minh")
st.write("Tr√≠ch xu·∫•t vƒÉn b·∫£n t·ª´ file ·∫£nh ho·∫∑c PDF. M·∫∑c ƒë·ªãnh x·ª≠ l√Ω song ng·ªØ Ti·∫øng Vi·ªát v√† Ti·∫øng Anh.")

# C·ªôt cho ph·∫ßn t·∫£i l√™n v√† h∆∞·ªõng d·∫´n
col1, col2 = st.columns([2, 1])

with col1:
    # Ti·ªán √≠ch t·∫£i file ƒë√£ ƒë∆∞·ª£c ƒë∆°n gi·∫£n h√≥a
    uploaded_files = st.file_uploader(
        "T·∫£i l√™n M·ªòT ho·∫∑c NHI·ªÄU file...",
        type=['pdf', 'png', 'jpg', 'jpeg'],
        accept_multiple_files=True
    )

with col2:
    with st.expander("üí° M·∫πo s·ª≠ d·ª•ng", expanded=True):
        st.info("""
        - ·ª®ng d·ª•ng ƒë∆∞·ª£c t·ªëi ∆∞u ƒë·ªÉ nh·∫≠n d·∫°ng t√†i li·ªáu c√≥ c·∫£ Ti·∫øng Vi·ªát v√† Ti·∫øng Anh.
        - B·∫°n c√≥ th·ªÉ k√©o th·∫£ nhi·ªÅu file v√†o ƒë√¢y c√πng m·ªôt l√∫c.
        - ƒê·ªÉ c√≥ k·∫øt qu·∫£ t·ªët nh·∫•t, h√£y s·ª≠ d·ª•ng ·∫£nh r√µ n√©t, ch·ªØ kh√¥ng b·ªã m·ªù.
        """)

# X·ª≠ l√Ω n·∫øu ng∆∞·ªùi d√πng ƒë√£ t·∫£i file l√™n
if uploaded_files:
    st.markdown("---")
    st.header("K·∫øt qu·∫£ tr√≠ch xu·∫•t")

    for uploaded_file in uploaded_files:
        with st.expander(f"K·∫øt qu·∫£ cho file: {uploaded_file.name}", expanded=True):
            with st.spinner(f"ƒêang x·ª≠ l√Ω '{uploaded_file.name}'..."):
                file_bytes = uploaded_file.getvalue()
                file_extension = uploaded_file.name.split('.')[-1].lower()
                
                # G·ªçi h√†m x·ª≠ l√Ω ƒë√£ ƒë∆∞·ª£c ƒë∆°n gi·∫£n h√≥a
                text, error = process_file(file_bytes, file_extension)

            if error:
                st.error(error)
            else:
                st.text_area("VƒÉn b·∫£n:", text, height=300, key=f"text_{uploaded_file.name}")
                st.download_button(
                    label="üì• T·∫£i k·∫øt qu·∫£ n√†y",
                    data=text.encode('utf-8'),
                    file_name=f"ket_qua_{uploaded_file.name}.txt",
                    mime="text/plain",
                    key=f"download_{uploaded_file.name}"
                )
