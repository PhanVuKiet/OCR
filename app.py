import streamlit as st
from PIL import Image
import pytesseract
from pdf2image import convert_from_bytes
import io

# ========================================================================================
# C·∫§U H√åNH TRANG
# ========================================================================================
st.set_page_config(
    page_title="Tr·ª£ l√Ω OCR Th√¥ng minh",
    page_icon="üìÑ",
    layout="wide"
)

# ========================================================================================
# H√ÄM H·ªñ TR·ª¢ (LOGIC X·ª¨ L√ù)
# ========================================================================================

def resize_image(image, max_width=1500):
    """Gi·∫£m k√≠ch th∆∞·ªõc ·∫£nh n·∫øu chi·ªÅu r·ªông c·ªßa n√≥ l·ªõn h∆°n max_width ƒë·ªÉ t·ªëi ∆∞u b·ªô nh·ªõ."""
    try:
        if image.width > max_width:
            ratio = max_width / image.width
            new_height = int(image.height * ratio)
            resized_image = image.resize((max_width, new_height), Image.LANCZOS)
            return resized_image
        return image
    except Exception:
        return image

def process_file(file_bytes, file_extension):
    """
    H√†m trung t√¢m x·ª≠ l√Ω file ƒë·∫ßu v√†o (·∫£nh ho·∫∑c PDF) v√† tr·∫£ v·ªÅ vƒÉn b·∫£n ƒë∆∞·ª£c tr√≠ch xu·∫•t.
    """
    extracted_text = ""
    try:
        if file_extension == 'pdf':
            images = convert_from_bytes(file_bytes)
            all_text = []
            # Th√™m st.progress ƒë·ªÉ ng∆∞·ªùi d√πng th·∫•y ti·∫øn tr√¨nh x·ª≠ l√Ω PDF
            progress_bar = st.progress(0)
            for i, img in enumerate(images):
                optimized_img = resize_image(img)
                all_text.append(pytesseract.image_to_string(optimized_img, lang='vie'))
                # C·∫≠p nh·∫≠t thanh ti·∫øn tr√¨nh
                progress_bar.progress((i + 1) / len(images))
            extracted_text = "\n\n--- H·∫øt trang ---\n\n".join(all_text)
        elif file_extension in ['png', 'jpg', 'jpeg']:
            image = Image.open(io.BytesIO(file_bytes))
            optimized_img = resize_image(image)
            extracted_text = pytesseract.image_to_string(optimized_img, lang='vie')
        return extracted_text, None
    except Exception as e:
        return None, f"ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh x·ª≠ l√Ω: {e}"

# ========================================================================================
# GIAO DI·ªÜN CH√çNH C·ª¶A ·ª®NG D·ª§NG
# ========================================================================================

st.title("üìÑ Tr·ª£ l√Ω OCR Th√¥ng minh")
st.write("Tr√≠ch xu·∫•t vƒÉn b·∫£n Ti·∫øng Vi·ªát t·ª´ file ·∫£nh ho·∫∑c PDF. H·ªó tr·ª£ t·∫£i l√™n nhi·ªÅu file c√πng l√∫c.")

# C·ªôt cho ph·∫ßn t·∫£i l√™n v√† h∆∞·ªõng d·∫´n
col1, col2 = st.columns([2, 1])

with col1:
    # THAY ƒê·ªîI QUAN TR·ªåNG: Th√™m accept_multiple_files=True
    uploaded_files = st.file_uploader(
        "T·∫£i l√™n M·ªòT ho·∫∑c NHI·ªÄU file ·∫£nh (JPG, PNG) ho·∫∑c PDF...",
        type=['pdf', 'png', 'jpg', 'jpeg'],
        accept_multiple_files=True  # <-- Cho ph√©p t·∫£i nhi·ªÅu file
    )

with col2:
    with st.expander("üí° M·∫πo s·ª≠ d·ª•ng", expanded=True):
        st.info("""
        - B·∫°n c√≥ th·ªÉ k√©o th·∫£ nhi·ªÅu file v√†o ƒë√¢y c√πng m·ªôt l√∫c.
        - K·∫øt qu·∫£ c·ªßa m·ªói file s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã trong m·ªôt khung ri√™ng bi·ªát b√™n d∆∞·ªõi.
        - ƒê·ªÉ c√≥ k·∫øt qu·∫£ t·ªët nh·∫•t, h√£y s·ª≠ d·ª•ng ·∫£nh r√µ n√©t v√† ch·ªØ kh√¥ng b·ªã m·ªù.
        """)

# X·ª≠ l√Ω n·∫øu ng∆∞·ªùi d√πng ƒë√£ t·∫£i file l√™n
if uploaded_files:
    st.markdown("---")
    st.header("K·∫øt qu·∫£ tr√≠ch xu·∫•t")

    # L·∫∑p qua t·ª´ng file ƒë√£ t·∫£i l√™n
    for uploaded_file in uploaded_files:
        # S·ª≠ d·ª•ng st.expander ƒë·ªÉ t·∫°o m·ªôt khu v·ª±c ri√™ng cho m·ªói file
        with st.expander(f"K·∫øt qu·∫£ cho file: {uploaded_file.name}", expanded=True):
            with st.spinner(f"ƒêang x·ª≠ l√Ω file '{uploaded_file.name}'..."):
                file_bytes = uploaded_file.getvalue()
                file_extension = uploaded_file.name.split('.')[-1].lower()
                
                # G·ªçi h√†m x·ª≠ l√Ω trung t√¢m
                text, error = process_file(file_bytes, file_extension)

            # Hi·ªÉn th·ªã k·∫øt qu·∫£ ho·∫∑c l·ªói
            if error:
                st.error(error)
            else:
                st.text_area("VƒÉn b·∫£n:", text, height=300, key=f"text_{uploaded_file.name}")
                st.download_button(
                    label="üì• T·∫£i k·∫øt qu·∫£ n√†y",
                    data=text.encode('utf-8'),
                    file_name=f"ket_qua_{uploaded_file.name}.txt",
                    mime="text/plain",
                    key=f"download_{uploaded_file.name}"
                )
